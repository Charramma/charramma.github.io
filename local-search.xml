<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于人生可能会遇见的问题</title>
    <link href="/2025/03/11/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%94%9F%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2025/03/11/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%94%9F%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="关于人生可能会遇见的问题"><a href="#关于人生可能会遇见的问题" class="headerlink" title="关于人生可能会遇见的问题"></a>关于人生可能会遇见的问题</h1><p>人活一世，总能遇到些问题。我将这些问题大致分为两类。</p><p>一类是潜在问题，即尚未显现，但可以通过某些迹象预见到将来可能发生的问题。如长期不良的饮食习惯，或者熬夜等行为，虽然暂时没有对生活造成什么影响，但是日积月累会造成健康问题，可能会带来严重的后果。</p><p>另一类是我称之为显性问题，即已经出现在我们面前，对生活直接造成影响的问题。这里我认为显性问题也可以进行分类讨论。可分为能自行消解的问题和需要积极解决的问题。能自行消解的问题就是对你造成了影响，但即使你不去主动解决，它也会自己消失。而另外一种显性问题，如果你不积极面对，主动去解决它，它会一直存在，甚至会扩大影响，长期对你造成影响。</p><p>下面进行分别讨论。</p><h2 id="一、潜在问题"><a href="#一、潜在问题" class="headerlink" title="一、潜在问题"></a>一、潜在问题</h2><p>这里列举一些潜在问题的案例：</p><ul><li>年轻人的不良生活习惯，如暴饮暴食、作息不规律，可能导致肥胖、高血压等健康问题。</li><li>职场人士忽视技能更新，当面临职业转型时，发现自己缺乏竞争力。</li><li>金融机构过度发放次级贷款，在市场繁荣时期看似无害，但经济形势恶化时可能引发连锁反应。</li></ul><p>最好的做法是，在潜在问题还没有转化为显性问题时就将其解决，或者事先做好准备，等潜在问题暴露的时候，也能游刃有余地面对。</p><p>以下是一些应对方法：</p><ol><li>增长见识：多读书、多旅行，开阔视野，提高对潜在风险的敏感度。</li><li>持续学习：不断更新自己的知识和技能，保持竞争力。</li><li>拓展人脉：建立广泛的人际关系网，增加社会支持。</li><li>自我反省：定期审视自己的行为和决策，提前发现潜在风险。</li><li>提高观察力：培养敏锐的洞察力，预见未来可能出现的问题。</li><li>制定预案：提前准备好应对突发情况的计划，减少损失。</li><li>反思总结：从每次经历中吸取教训，避免重蹈覆辙。</li><li>关注心理健康：保持积极乐观的心态，有效管理压力。</li></ol><h2 id="二、显性问题"><a href="#二、显性问题" class="headerlink" title="二、显性问题"></a>二、显性问题</h2><p>之前提到过，我将显性问题分为能自行消解的问题和需要积极解决的问题。</p><p>举一些例子。能自行消解的问题，如：</p><ul><li>吃东西吃撑了，导致胃很不舒服，消化一段时间后，胃就不再像之前一样难受。</li><li>下雨了，但是没带伞，等到雨停了，你又能继续行程。</li></ul><p>需要积极解决的问题的案例：</p><ul><li>经济不景气导致的企业裁员，许多人在失业后长时间找不到工作，生活陷入困境。</li><li>上级分配的紧急且复杂的任务，给员工带来巨大的心理压力。</li><li>牙痛影响日常饮食和睡眠质量。</li></ul><p>当人们直观地感知到问题的存在时，很可能会产生如下的情绪或行为：</p><ul><li>后悔：总是想如果当初做了不同的选择就好了。</li><li>自我贬低：认为自己能力不足或运气不佳。</li><li>焦虑：对未来充满担忧，急于找到解决方案。</li><li>愤怒：对自我或他人的不满，甚至产生攻击行为。</li><li>沮丧：对解决问题失去信心，陷入绝望。</li><li>嫉妒：羡慕那些似乎没有遇到同样问题的人。</li><li>逃避：不愿意面对问题，选择回避。</li><li>自我封闭：切断与外界的联系，独自承受痛苦。</li></ul><p>一个很明显的事实是：<u><strong>以上的消极情绪，对问题的解决没有任何帮助！</strong></u>甚至可能导致问题的加剧。焦虑会影响思考，愤怒会产生矛盾，自我贬低和沮丧绝望会影响心理健康。你沉浸在消极情绪中无法自拔，但问题依旧存在。</p><p>那么，该如何以正确的方式应对这些显性问题，我认为有如下的方式：</p><ol><li>保持冷静：冷静的头脑有助于理性分析问题，找到解决办法。</li><li>保持积极：相信自己有能力克服困难，保持乐观的心态。</li><li>正视问题：承认问题的存在，不逃避，勇敢面对。</li><li>深入分析：全面、客观地分析问题的根源，制定有效的解决方案。</li><li>问题拆解：将复杂的问题分解成若干个小问题，逐一解决。</li><li>寻求帮助：利用团队的力量，共同解决问题。</li><li>接受现实：对于超出个人控制范围的问题，学会放手，专注于自己能够改变的部分。</li></ol><p>以上即为我个人对人生可能遇见的问题的看法。</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Easy Mock的部署及使用</title>
    <link href="/2024/03/27/Easy-Mock%E7%9A%84%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/03/27/Easy-Mock%E7%9A%84%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Easy-Mock的部署及使用"><a href="#Easy-Mock的部署及使用" class="headerlink" title="Easy Mock的部署及使用"></a>Easy Mock的部署及使用</h1><p>Easy Mock 是一个可视化，并且能快速生成<strong>模拟数据</strong>的持久化服务。</p><p>GitHub地址：<a href="https://github.com/easy-mock/easy-mock">https://github.com/easy-mock/easy-mock</a></p><p>中文介绍文档：<a href="https://github.com/easy-mock/easy-mock/blob/dev/README.zh-CN.md">https://github.com/easy-mock/easy-mock/blob/dev/README.zh-CN.md</a></p><h2 id="一、部署"><a href="#一、部署" class="headerlink" title="一、部署"></a>一、部署</h2><h3 id="1-传统部署"><a href="#1-传统部署" class="headerlink" title="1. 传统部署"></a>1. 传统部署</h3><blockquote><p>建议使用docker部署，传统部署坑太多了</p></blockquote><p>参考：<a href="https://coder.itclan.cn/fontend/tools/local-deploy-easy-mock/#%E5%89%8D%E8%A8%80">https://coder.itclan.cn/fontend/tools/local-deploy-easy-mock/#%E5%89%8D%E8%A8%80</a></p><h4 id="1-1-安装Redis"><a href="#1-1-安装Redis" class="headerlink" title="1.1 安装Redis"></a>1.1 安装Redis</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载源码包</span><br>version=&#x27;6.0.9&#x27;<br>wget https://download.redis.io/releases/redis-$&#123;version&#125;.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装依赖</span><br>yum install gcc gcc-c++ make -y<br>yum install centos-release-scl -y<br>yum install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils -y<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用gcc9</span><br>scl enable devtoolset-9 bash<br>echo &quot;source /opt/rh/devtoolset-9/enable&quot; &gt;&gt; /etc/profile<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压源码包</span><br>tar xf redis-$&#123;version&#125;.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译安装</span><br>cd redis-$&#123;version&#125;<br>make -j 2<br>make PREFIX=/usr/local/redis install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改系统参数</span><br>echo net.core.somaxconn=511 &gt;&gt; /etc/sysctl.conf<br>echo vm.overcommit_memory=1 &gt;&gt; /etc/sysctl.conf<br>sysctl -p<br>echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加配置文件</span><br>mkdir /usr/local/redis/conf<br>cat &gt; /usr/local/redis/conf/redis.conf &lt;&lt; EOF<br>bind 127.0.0.1<br>protected-mode yes<br>port 6379<br>tcp-backlog 511<br>timeout 0<br>tcp-keepalive 300<br>daemonize no<br>supervised no<br>pidfile /var/run/redis_6379.pid<br>loglevel notice<br>logfile &quot;&quot;<br>databases 16<br>always-show-logo yes<br>save 900 1<br>save 300 10<br>save 60 10000<br>stop-writes-on-bgsave-error yes<br>rdbcompression yes<br>rdbchecksum yes<br>dbfilename dump.rdb<br>rdb-del-sync-files no<br>dir ./<br>replica-serve-stale-data yes<br>replica-read-only yes<br>repl-diskless-sync no<br>repl-diskless-sync-delay 5<br>repl-diskless-load disabled<br>repl-disable-tcp-nodelay no<br>replica-priority 100<br>acllog-max-len 128<br>lazyfree-lazy-eviction no<br>lazyfree-lazy-expire no<br>lazyfree-lazy-server-del no<br>replica-lazy-flush no<br>lazyfree-lazy-user-del no<br>oom-score-adj no<br>oom-score-adj-values 0 200 800<br>appendonly no<br>appendfilename &quot;appendonly.aof&quot;<br>appendfsync everysec<br>no-appendfsync-on-rewrite no<br>auto-aof-rewrite-percentage 100<br>auto-aof-rewrite-min-size 64mb<br>aof-load-truncated yes<br>aof-use-rdb-preamble yes<br>lua-time-limit 5000<br>slowlog-log-slower-than 10000<br>slowlog-max-len 128<br>latency-monitor-threshold 0<br>notify-keyspace-events &quot;&quot;<br>hash-max-ziplist-entries 512<br>hash-max-ziplist-value 64<br>list-max-ziplist-size -2<br>list-compress-depth 0<br>set-max-intset-entries 512<br>zset-max-ziplist-entries 128<br>zset-max-ziplist-value 64<br>hll-sparse-max-bytes 3000<br>stream-node-max-bytes 4096<br>stream-node-max-entries 100<br>activerehashing yes<br>client-output-buffer-limit normal 0 0 0<br>client-output-buffer-limit replica 256mb 64mb 60<br>client-output-buffer-limit pubsub 32mb 8mb 60<br>hz 10<br>dynamic-hz yes<br>aof-rewrite-incremental-fsync yes<br>rdb-save-incremental-fsync yes<br>jemalloc-bg-thread yes<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动redis</span><br>mkdir /usr/local/redis/logs<br>nohup /usr/local/redis/bin/redis-server /usr/local/redis/conf/redis.conf &gt;&gt; /usr/local/redis/logs/redis.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h4 id="1-2-安装MongoDB"><a href="#1-2-安装MongoDB" class="headerlink" title="1.2 安装MongoDB"></a>1.2 安装MongoDB</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载二进制包</span><br>wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-5.0.3.tgz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压</span><br>tar -xf mongodb-linux-x86_64-rhel70-5.0.3.tgz<br>mv mongodb-linux-x86_64-rhel70-5.0.3 /usr/local/mongodb<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">新建数据目录、日志目录和配置文件目录</span><br>mkdir /usr/local/mongodb/&#123;data,logs,conf&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加配置文件</span><br>cat &gt; /usr/local/mongodb/conf/mongo.conf &lt;&lt; EOF<br>port=27017<br>dbpath=/usr/local/mongodb/data<br>logpath=/usr/local/mongodb/logs/mongod.log<br>pidfilepath=/usr/local/mongodb/mongod.pid<br>logappend=true<br>fork=true<br>journal=true<br>bind_ip=localhost<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动MongoDB</span><br>/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/conf/mongo.conf<br></code></pre></td></tr></table></figure><h4 id="1-3-部署easy-mock"><a href="#1-3-部署easy-mock" class="headerlink" title="1.3 部署easy-mock"></a>1.3 部署easy-mock</h4><p>需要先安装git和nodejs</p><p>注意：要在Redis和MongoDB已经启动的条件下部署easy-mock</p><p>第一步：从GitHub拉取easy-mock</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/easy-mock/easy-mock.git<br><br><span class="hljs-built_in">cd</span> easy-mock &amp;&amp; npm install<br></code></pre></td></tr></table></figure><p>第二步：修改配置文件easy-mock&#x2F;config&#x2F;default.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">7300</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 将此处的&quot;host&quot;: &quot;0.0.0.0&quot;修改为localhost</span><br>  <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;localhost&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;pageSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;proxy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;db&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mongodb://localhost/easy-mock&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;unsplashClientId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;redis&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;keyPrefix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;[Easy Mock]&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">6379</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;localhost&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;db&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;blackList&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;projects&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ips&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;rateLimit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;max&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1000</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;duration&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1000</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;jwt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;expire&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;14 days&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;secret&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;shared-secret&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;upload&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;types&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;.jpg&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.jpeg&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.png&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.gif&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.json&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.yml&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.yaml&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5242880</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dir&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;../public/upload&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;expire&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;types&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;.json&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.yml&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.yaml&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;day&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-1</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ldap&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;bindDN&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;filter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;base&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;attributeName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;fe&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;copyright&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;storageNamespace&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;easy-mock_&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">25000</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;publicPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/dist/&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>启动easy-mock</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> dev<br></code></pre></td></tr></table></figure><h3 id="2-Docker部署Easy-Mock"><a href="#2-Docker部署Easy-Mock" class="headerlink" title="2. Docker部署Easy Mock"></a>2. Docker部署Easy Mock</h3><p>官方GitHub仓库：<a href="https://github.com/easy-mock/easy-mock-docker">https://github.com/easy-mock/easy-mock-docker</a></p><p>参考：<a href="https://juejin.cn/post/7081459518642585613">https://juejin.cn/post/7081459518642585613</a></p><p>需要先安装好docker和docker-compose</p><p>创建docker-compose.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mongodb:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mongo:3.4.1</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment">#  /apps/easy-mock/data/db 是数据库文件存放地址，根据需要修改为本地地址</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;/apps/easy-mock/data/db:/data/db&#x27;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">easy-mock</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">redis:4.0.6</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">redis-server</span> <span class="hljs-string">--appendonly</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment">#  /apps/easy-mock/data/redis 是 redis 数据文件存放地址，根据需要修改为本地地址</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;/apps/easy-mock/data/redis:/data&#x27;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">easy-mock</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br><br>  <span class="hljs-attr">web:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">easymock/easymock:1.6.0</span><br>    <span class="hljs-comment"># easy-mock 官方给出的文件，这里是 npm start，这里修改为 npm run dev</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">/bin/bash</span> <span class="hljs-string">-c</span> <span class="hljs-string">&quot;npm run dev&quot;</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">7300</span><span class="hljs-string">:7300</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># 日志地址，根据需要修改为本地地址</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;/apps/easy-mock/logs:/home/easy-mock/easy-mock/logs&#x27;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">easy-mock</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">easy-mock:</span><br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>访问<a href="http://ip:7300/">http://ip:7300</a></p><p><img src="https://pic1.imgdb.cn/item/67d3857388c538a9b5bc9555.png"></p><h2 id="二、使用Easy-Mock"><a href="#二、使用Easy-Mock" class="headerlink" title="二、使用Easy Mock"></a>二、使用Easy Mock</h2><p>可用的在线的easymock页面：<a href="https://mock.mengxuegu.com/login">https://mock.mengxuegu.com/login</a></p><p><a href="mailto:&#104;&#117;&#97;&#x6e;&#103;&#x2e;&#x7a;&#x79;&#x6e;&#x40;&#113;&#x71;&#x2e;&#99;&#x6f;&#109;">huang.zyn@qq.com</a>&#x2F;<a href="mailto:&#104;&#117;&#97;&#x6e;&#x67;&#x2e;&#122;&#121;&#110;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;">huang.zyn@qq.com</a></p><h3 id="1-登录注册"><a href="#1-登录注册" class="headerlink" title="1. 登录注册"></a>1. 登录注册</h3><p>略</p><h3 id="2-创建项目"><a href="#2-创建项目" class="headerlink" title="2. 创建项目"></a>2. 创建项目</h3><p><img src="https://pic1.imgdb.cn/item/67d385c488c538a9b5bc9576.png"></p><p><img src="https://pic1.imgdb.cn/item/67d385e088c538a9b5bc9589.png"></p><h3 id="3-创建接口"><a href="#3-创建接口" class="headerlink" title="3. 创建接口"></a>3. 创建接口</h3><p><img src="https://pic1.imgdb.cn/item/67d3860d88c538a9b5bc95bf.png"></p><p><img src="https://pic1.imgdb.cn/item/67d3862288c538a9b5bc95e8.png"></p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python程序退出问题</title>
    <link href="/2024/03/19/Python%E7%A8%8B%E5%BA%8F%E9%80%80%E5%87%BA%E9%97%AE%E9%A2%98/"/>
    <url>/2024/03/19/Python%E7%A8%8B%E5%BA%8F%E9%80%80%E5%87%BA%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>在编写Python代码时，涉及到退出程序逻辑，会使用到<code>exit()</code>。在交互式控制台中，退出的提示就是使用<code>Ctrl + D</code>或<code>exit()</code>进行退出</p><p>当你通过<code>python script.py</code>命令手动执行代码时，执行到<code>exit()</code>这里，程序会和预期一样退出</p><p>可是当你使用pyinstaller将代码打包成了一个可执行程序，问题就出现了。程序执行到<code>exit()</code>的时候，抛出了一个错误：<code>NameError: name &#39;exit&#39; is not defined</code></p><p>它告诉你：<code>exit</code>这个函数没有被定义。</p><p>这是因为标准的Python库中并没有名为<code>exit</code>的内置函数，打包前执行程序时调用的<code>exit()</code>实际上是交互式环境提供的扩展功能，使用pyinstaller打包并不会将它打包进去。</p><p><strong>如何解决这一问题？</strong></p><p>可以使用<code>sys.exit()</code>方法（使用前别忘了<code>import sys</code>）。</p><p><code>sys.exit()</code>可以接收一个可选参数，表示程序的退出状态码。</p><ul><li>如果没有参数传入或传入的参数为<code>0</code>，即<code>sys.exit()</code>或<code>sys.exit(0)</code>，表示程序正常退出。</li><li>如果传入的是一个非零参数，如<code>sys.exit(-1)</code>，通常用于指示程序由于某种类型的错误或异常情况退出。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes更新证书</title>
    <link href="/2023/08/24/Kubernetes%E6%9B%B4%E6%96%B0%E8%AF%81%E4%B9%A6/"/>
    <url>/2023/08/24/Kubernetes%E6%9B%B4%E6%96%B0%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>本文首发于博客园：<a href="https://www.cnblogs.com/CharrammaBlog/p/17653321.html">https://www.cnblogs.com/CharrammaBlog/p/17653321.html</a></p>          </div><h1 id="Kubernetes更新证书"><a href="#Kubernetes更新证书" class="headerlink" title="Kubernetes更新证书"></a>Kubernetes更新证书</h1><p>执行kubectl命令时，报<code>error: You must be logged in to the server (Unauthorized)</code>错误。<br>这是因为Kubernetes证书过期了。</p><p>可以使用如下命令查看证书有效时间</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs smali"><span class="hljs-comment"># 1.19及以下版本的Kubernetes</span><br>kubeadm alpha certs<span class="hljs-built_in"> check-expiration</span><br><span class="hljs-built_in"></span><br><span class="hljs-comment"># 1.20及以上版本的Kubernetes</span><br>kubeadm certs check-expiration<br></code></pre></td></tr></table></figure><p>更新证书</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># &lt;= 1.19</span><br><span class="hljs-attribute">kubeadm</span> alpha certs renew <span class="hljs-literal">all</span><br><br><span class="hljs-comment"># &gt;= 1.20</span><br><span class="hljs-attribute">kubeadm</span> certs renew <span class="hljs-literal">all</span><br></code></pre></td></tr></table></figure><p>更新证书完成后，重启kubernetes组件</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coq">docker ps |<span class="hljs-type">grep</span> -E &#x27;k8s_kube-apiserver|<span class="hljs-type">k8s_kube</span>-controller-manager|<span class="hljs-type">k8s_kube</span>-scheduler|<span class="hljs-type">k8s_etcd_etcd</span>&#x27; | <span class="hljs-type">awk</span> -F &#x27; &#x27; &#x27;&#123;print $<span class="hljs-number">1</span>&#125;&#x27; | <span class="hljs-type">xargs</span> docker restart<br><br>systemctl restart kubelet<br></code></pre></td></tr></table></figure><p>更新kubectl控制文件</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mel">mv /root/.kube/config /root/.kube/config-$(<span class="hljs-keyword">date</span> +%Y%m%d%H%M%S)<br>cp /etc/kubernetes/admin.conf /root/.kube/config<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Canal读取不到binlog的解决办法</title>
    <link href="/2023/02/16/Canal%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%88%B0binlog%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/2023/02/16/Canal%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%88%B0binlog%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>本文首发于博客园：<a href="https://www.cnblogs.com/CharrammaBlog/p/17127049.html">https://www.cnblogs.com/CharrammaBlog/p/17127049.html</a></p>          </div><h1 id="Canal读取不到binlog的解决办法"><a href="#Canal读取不到binlog的解决办法" class="headerlink" title="Canal读取不到binlog的解决办法"></a>Canal读取不到binlog的解决办法</h1><p>最近带了个新人，给了他一套新部署还没正式上线的环境让他负责运维，今天测试的同事在在群里说MQ消息推送不过去了。</p><p>我帮着排查一下，按我的经验，通常是Canal的问题，于是我瞅了眼Canal的日志，果然报错了。<br>关键的错误就是这一句：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">java.io.IOException: Received error packet: errno = <span class="hljs-number">1236</span>, sqlstate = HY000 errmsg = Could not <span class="hljs-keyword">find</span> <span class="hljs-keyword">first</span> <span class="hljs-built_in">log</span> <span class="hljs-keyword">file</span> name in binary <span class="hljs-built_in">log</span> <span class="hljs-built_in">index</span> <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure><p>这是说读取不到binlog了。</p><p>按日志里的信息，该Topic在读取的binlog和位点分别是mysql-bin.000010和984601。</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;<span class="hljs-string">&quot;identity&quot;</span>:&#123;<span class="hljs-string">&quot;slaveId&quot;</span><span class="hljs-symbol">:-1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;sourceAddress&quot;</span>:&#123;<span class="hljs-string">&quot;address&quot;</span>:<span class="hljs-string">&quot;mid1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;port&quot;</span>:<span class="hljs-number">3306</span>&#125;&#125;<span class="hljs-punctuation">,</span><span class="hljs-string">&quot;postion&quot;</span>:&#123;<span class="hljs-string">&quot;included&quot;</span><span class="hljs-symbol">:false</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;journalName&quot;</span>:<span class="hljs-string">&quot;mysql-bin.000010&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;position&quot;</span>:<span class="hljs-number">984601</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;serverId&quot;</span>:<span class="hljs-number">3232238851</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;timestamp&quot;</span>:<span class="hljs-number">1676468225000</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>我连上对应的MySQL，查看binlog，好家伙，变成mysql-bin.000001了！！！我第一反应，这小子不会是重装MySQL了吧。一问，他说他昨天发现MySQL的binlog有重复的（没懂是什么意思），然后他执行了<code>reset master;</code></p><p>我。。。。</p><p>他又说他修改了Topic配置文件的<code>canal.instance.master.journal.name</code>和<code>canal.instance.master.position</code>配置项，把binlog和位点修改为现有的，但是重启Canal后没有生效。</p><p>这个问题在我刚接触Canal的时候也遇到过，修改配置文件中的binlog和位点，重启后发现Canal还在读以前的binlog和位点。这是因为Topic配置文件中的位点只是创建Topic时用于定位的，之后binlog的读取进度都记录在Zookeeper中，不再从配置文件中获取。所以Canal读取不到binlog的问题可以通过修改Zookeeper的Canal的信息来解决。</p><p>解决步骤如下：</p><p>先连接Zookeeper客户端</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/zookeeper/</span>bin/zkCli.sh -server localhost:<span class="hljs-number">2181</span><br></code></pre></td></tr></table></figure><p>然后修改对应的canal信息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta"># 查看现有canal位点信息</span><br>[<span class="hljs-meta">zk: localhost:2181(CONNECTED) 13</span>] <span class="hljs-keyword">get</span> /otter/canal/destinations/segi_pub/parse<br>&#123;<span class="hljs-string">&quot;identity&quot;</span>:&#123;<span class="hljs-string">&quot;slaveId&quot;</span>:<span class="hljs-number">-1</span>,<span class="hljs-string">&quot;sourceAddress&quot;</span>:&#123;<span class="hljs-string">&quot;address&quot;</span>:<span class="hljs-string">&quot;mid1&quot;</span>,<span class="hljs-string">&quot;port&quot;</span>:<span class="hljs-number">3306</span>&#125;&#125;,<span class="hljs-string">&quot;postion&quot;</span>:&#123;<span class="hljs-string">&quot;included&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;journalName&quot;</span>:<span class="hljs-string">&quot;mysql-bin.000001&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>:<span class="hljs-number">207621226</span>,<span class="hljs-string">&quot;serverId&quot;</span>:<span class="hljs-number">3232238851</span>,<span class="hljs-string">&quot;timestamp&quot;</span>:<span class="hljs-number">1676529084000</span>&#125;&#125;<br><br><span class="hljs-meta"># 修改</span><br>[<span class="hljs-meta">zk: localhost:2181(CONNECTED) 14</span>] <span class="hljs-keyword">set</span> /otter/canal/destinations/segi_pub/parse &#123;<span class="hljs-string">&quot;identity&quot;</span>:&#123;<span class="hljs-string">&quot;slaveId&quot;</span>:<span class="hljs-number">-1</span>,<span class="hljs-string">&quot;sourceAddress&quot;</span>:&#123;<span class="hljs-string">&quot;address&quot;</span>:<span class="hljs-string">&quot;mid1&quot;</span>,<span class="hljs-string">&quot;port&quot;</span>:<span class="hljs-number">3306</span>&#125;&#125;,<span class="hljs-string">&quot;postion&quot;</span>:&#123;<span class="hljs-string">&quot;included&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;journalName&quot;</span>:<span class="hljs-string">&quot;mysql-bin.000001&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>:<span class="hljs-number">207621</span>,<span class="hljs-string">&quot;serverId&quot;</span>:<span class="hljs-number">3232238851</span>,<span class="hljs-string">&quot;timestamp&quot;</span>:<span class="hljs-number">1676529084000</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>最后重启canal。</p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>canal</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>canal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git错误-Your local changes to the following files would be overwritten by merge</title>
    <link href="/2020/04/03/git%E9%94%99%E8%AF%AF-Your-local-changes-to-the-following-files-would-be-overwritten-by-merge/"/>
    <url>/2020/04/03/git%E9%94%99%E8%AF%AF-Your-local-changes-to-the-following-files-would-be-overwritten-by-merge/</url>
    
    <content type="html"><![CDATA[<p>git pull拉取远程仓库时出现错误</p><blockquote><p>error: Your local changes to the following files would be overwritten by merge:<br>合并将覆盖对以下文件的本地更改</p></blockquote><p>如果想保留本地修改，可以通过以下方法解决</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git stash<br>git pull origin <span class="hljs-keyword">master</span><br><span class="hljs-title">git</span> stash pop<br></code></pre></td></tr></table></figure><p><code>git stash</code>备份当前工作区的内容，保存到git 栈中，从最近的一次commit中读取相关内容。然后就可以git pull了。<br><code>git stash pop</code>从git栈中获取到最近一次stash进去的内容，恢复工作区的内容，获取之后，会删除栈中对应的stash。</p><p>如果不想保留本地修改，使用如下命令：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard</span><br></code></pre></td></tr></table></figure><p><code>git reset --hard</code>放弃本地修改，然后可以使用git pull覆盖掉本地的代码。</p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中的a+=b和a=a+b之间的区别</title>
    <link href="/2020/03/26/Python%E4%B8%AD%E7%9A%84a-b%E5%92%8Ca-a-b%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2020/03/26/Python%E4%B8%AD%E7%9A%84a-b%E5%92%8Ca-a-b%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>当变量为不可变对象时，<code>a+=b</code>和<code>a=a+b</code>是一样的，但前后两个a已经不是同一个对象</p><p>当变量是可变对象时，虽然<code>a+=b</code>和<code>a=a+b</code>的效果是一样的，但是<code>a=a+b</code>前后的两个a也不是同一个对象了，而<code>a+=b</code>前后两个a还是同一个对象</p><p>看如下实例：</p><p>当a和b为不可变对象</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"># 不可变对象<br># a+=b 前后的a不是同一个对象<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=<span class="hljs-number">1</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b=<span class="hljs-number">2</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140722530604704<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a+=b</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140722530604768<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(a)</span><br>3<br># a=a+b 前后的a也不是同一个对象<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=<span class="hljs-number">1</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b=<span class="hljs-number">2</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140722530604704<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=a+b</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140722530604768<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(a)</span><br>3<br></code></pre></td></tr></table></figure><p>当a和b为可变对象</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"># 可变对象<br># a+=b 前后的a是同一个对象<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b=[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>214391266944<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a+=b</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>214391266944<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(a)</span><br>[1, 2, 3, 4]<br># a=a+b 前后的a不是同一个对象<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b=[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>2143494790272<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a=a+b</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>2143494790592<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(a)</span><br>[1, 2, 3, 4]<br></code></pre></td></tr></table></figure><p>区别在于，<code>+</code>操作会调用<code>__add__()</code>方法，该方法返回一个新的对象，原对象不修改。而<code>+=</code>调用的是<code>__iadd__()</code>方法，该方法直接在原对象上进行更新，该方法返回值为<code>None</code>。如果对象没有<code>__iadd__()</code>方法时，会尝试调用<code>__add__()</code>方法。</p><p>不可变对象没有<code>__iadd__()</code>方法，可变对象同时具有<code>__add__()</code>和<code>__iadd__()</code>方法。</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a = <span class="hljs-number">1</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b = []</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(a, <span class="hljs-string">&#x27;__add__&#x27;</span>):</span><br><span class="hljs-meta prompt_">...</span> <span class="language-python">        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a has __add__&#x27;</span>)</span><br><span class="hljs-meta prompt_">...</span><br>a has __add__<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(b, <span class="hljs-string">&#x27;__add__&#x27;</span>):</span><br><span class="hljs-meta prompt_">...</span> <span class="language-python">            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b has __add__&#x27;</span>)</span><br><span class="hljs-meta prompt_">...</span><br>b has __add__<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(a, <span class="hljs-string">&#x27;__iadd__&#x27;</span>):</span><br><span class="hljs-meta prompt_">...</span> <span class="language-python">                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a has __iadd__&#x27;</span>)</span><br><span class="hljs-meta prompt_">...</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(b, <span class="hljs-string">&#x27;__iadd__&#x27;</span>):</span><br><span class="hljs-meta prompt_">...</span> <span class="language-python">                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b has __iadd__&#x27;</span>)</span><br><span class="hljs-meta prompt_">...</span><br>b has __iadd__<br></code></pre></td></tr></table></figure><p><strong>结论</strong>：</p><ul><li>当变量是不可变对象时，<code>a+=b</code>和<code>a=a+b</code>调用的都是<code>__add__</code>方法，返回的是一个新对象</li><li>当变量是可变对象时，<code>a+=b</code>调用的是<code>__iadd__</code>方法，直接在原对象上进行更新；<code>a=a+b</code>调用的是<code>__add__</code>方法，返回一个新对象</li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
